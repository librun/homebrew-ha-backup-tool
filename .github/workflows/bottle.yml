name: Build and Deploy Homebrew Bottles

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {} # Разрешить ручной запуск

env:
  FORMULA_NAME: ha-backup-tool
  # Используйте grep для извлечения версии из .rb файла, если она меняется
  FORMULA_ROOT_URL: https://ghcr.io/v2/librun/tools

# permissions:
#   contents: write
jobs:
  # =================================================================
  # ШАГ 1: СБОРКА BOTTLE НА РАЗНЫХ ПЛАТФОРМАХ
  # =================================================================
  build_bottles:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Выбираем целевые системы
        # macOS-14 для ARM (Apple Silicon), Ubuntu для Linux
        #os: [macos-14-intel, macos-14, macos-15-intel, macos-15, macos-26, macos-26-intel, ubuntu-latest]
        os: [ubuntu-latest]
        # Если нужна сборка для Intel Mac: добавьте 'macos-12' (или 'macos-13')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Homebrew Environment
        uses: Homebrew/actions/setup-homebrew@master

      # Убедитесь, что ваш Tap установлен (важно для brew install)
      - name: Tap self
        run: brew tap "${GITHUB_REPOSITORY}"

      # Сборка bottle
      - name: Install and Bottle Formula
        run: |
          brew install --build-bottle "${GITHUB_REPOSITORY}/${{ env.FORMULA_NAME }}"
          brew bottle --json --root-url="${FORMULA_ROOT_URL}" "${GITHUB_REPOSITORY}/${{ env.FORMULA_NAME }}"
          
      # Загрузка bottle и JSON как артефактов GitHub
      - name: Upload Bottle and JSON Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-bottle-artifacts
          path: |
            ${{ github.workspace }}/*.tar.gz
            ${{ github.workspace }}/*.json

  # =================================================================
  # ШАГ 2: ОБЪЕДИНЕНИЕ МЕТАДАННЫХ И ДЕПЛОЙ
  # =================================================================
  deploy_bottles:
    needs: build_bottles # Зависит от успешной сборки
    runs-on: ubuntu-latest # macos-14
    if: success() # Выполнять только после успешной сборки всех платформ

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Homebrew and Git
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install GitHub CLI (gh)
        run: brew install gh

      # Скачивание всех bottles и JSON со всех систем
      - name: Download all bottle artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Объединение JSON и обновление формулы
      - name: Combine JSONs and Update Formula
        run: |
          # Перемещаем JSON-файлы в одну папку для pr-upload
          find artifacts -name "*.json" -exec mv {} . \;
          # Перемещаем tar.gz-файлы в одну папку для pr-upload
          find artifacts -name "*.tar.gz" -exec mv {} . \;

          # git config
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "librun by github-actions[bot]"

          # Загружаем файлы в GHCR (необходимо настроить GHCR root_url в формуле)
          # Или используем команду, чтобы только обновить формулу локально:
          brew pr-upload
        env:
          # Требуется для brew pr-upload, даже если не загружаем в GHCR
          HOMEBREW_GITHUB_PACKAGES_USER: "librun"
          HOMEBREW_GITHUB_PACKAGES_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Push Updated Formula
        run: |
          # Используем GITHUB_TOKEN для аутентификации
          # GITHUB_ACTOR - это имя пользователя, выполняющего action (обычно github-actions[bot])
          git push https://"${{ github.actor }}":"${{ secrets.GITHUB_TOKEN }}"@github.com/"$GITHUB_REPOSITORY".git HEAD:main